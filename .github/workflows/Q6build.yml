name: Java CI with Maven 
on: 
  workflow_dispatch:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build-auth-service:
    strategy:
      matrix:
        jdk: [17]
        os: [ubuntu-18.04, ubuntu-20.04]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build Auth Service with Maven
      run: |
        cd phase-3
        cd authusers
        mvn -B package -Dmaven.test.skip=true
        
  build-todo-service:
    strategy:
      matrix:
        jdk: [17]
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
        
    runs-on: ${{ matrix.os }}   
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build Auth Service with Maven
      run: |
        cd phase-3
        cd todolist
        mvn -B package -Dmaven.test.skip=true
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: phase-3/todolist/.
        file: phase-3/todolist/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  build-notification-service:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build Auth Service with Maven
      run: |
        cd phase-3
        cd notifications
        mvn -B package -Dmaven.test.skip=true
  
  publish-docker-images:
    runs-on: ubuntu-latest
    needs: build-auth-service
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build Auth Service with Maven
        run: |
          cd phase-3
          cd authusers
          mvn -B package -Dmaven.test.skip=true
      - name: Build Todo Service with Maven
        run: |
          cd phase-3
          cd todolist
          mvn -B package -Dmaven.test.skip=true
      - name: Build Notification Service with Maven
        run: |
          cd phase-3
          cd notifications
          mvn -B package -Dmaven.test.skip=true
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta-auth
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/authusers
      - name: Extract metadata (tags, labels) for Docker
        id: meta-todo
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/todolist
      - name: Extract metadata (tags, labels) for Docker
        id: meta-notifications
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/notifications    
          
      - name: Build and push auth Docker image
        uses: docker/build-push-action@v4
        with:
          context: phase-3/authusers/.
          file: phase-3/authusers/Dockerfile
          push: true
          tags: ${{ steps.meta-auth.outputs.tags }}
          labels: ${{ steps.meta-auth.outputs.labels }}
      - name: Build and push todo Docker image
        uses: docker/build-push-action@v4
        with:
          context: phase-3/todolist/.
          file: phase-3/todolist/Dockerfile
          push: true
          tags: ${{ steps.meta-todo.outputs.tags }}
          labels: ${{ steps.meta-todo.outputs.labels }}
      - name: Build and push notifications Docker image
        uses: docker/build-push-action@v4
        with:
          context: phase-3/notifications/.
          file: phase-3/notifications/Dockerfile
          push: true
          tags: ${{ steps.meta-notifications.outputs.tags }}
          labels: ${{ steps.meta-notifications.outputs.labels }}
    

  
